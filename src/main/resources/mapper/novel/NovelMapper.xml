<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- mapper:根标签，namespace：命名空间，随便写，一般保证命名空间唯一 ，为了使用接口动态代理，这里必须是接口的全路径名-->
<mapper namespace="com.xin.daily.dao.novel.NovelMapper">
    <resultMap id="BaseResultMap" type="com.xin.daily.entity.novel.Novel">
        <!--@mbg.generated-->
        <!--@Table study.novel-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="novel_code" jdbcType="VARCHAR" property="novelCode"/>
        <result column="novel_name" jdbcType="VARCHAR" property="novelName"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="cover_img" jdbcType="VARCHAR" property="coverImg"/>
        <result column="flag_delete" jdbcType="TINYINT" property="flagDelete"/>
        <result column="flag_update" jdbcType="TINYINT" property="flagUpdate"/>
        <result column="flag_end" jdbcType="TINYINT" property="flagEnd"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="creator" jdbcType="VARCHAR" property="creator"/>
        <result column="creator_ip" jdbcType="VARCHAR" property="creatorIp"/>
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime"/>
        <result column="modifier" jdbcType="VARCHAR" property="modifier"/>
        <result column="modifier_ip" jdbcType="VARCHAR" property="modifierIp"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, novel_code, novel_name, description, url, cover_img, flag_delete, flag_update,
        flag_end, create_time, creator, creator_ip, modify_time, modifier, modifier_ip
    </sql>
<!--
    type:返回的结果集对应的java的实体类型
    id:resultMap的唯一标识
    autoMapping：默认完成映射，如果已开启驼峰匹配，可以解决驼峰匹配
-->
    <resultMap id="queryResultMap" type="com.xin.daily.vo.NovelVo">
        <result column="novel_code" jdbcType="VARCHAR" property="novelCode"/>
        <result column="novel_name" jdbcType="VARCHAR" property="novelName"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="cover_img" jdbcType="VARCHAR" property="coverImg"/>
        <result column="flag_delete" jdbcType="TINYINT" property="flagDelete"/>
        <result column="flag_update" jdbcType="TINYINT" property="flagUpdate"/>
        <result column="flag_end" jdbcType="TINYINT" property="flagEnd"/>
    </resultMap>
    <sql id="query_column_list">
            novel_code,
            novel_name,
            description,
            url,
            cover_img,
            flag_delete,
            flag_update,
            flag_end
    </sql>
<!--
    1.#{},预编译的方式preparedStatement，使用占位符替换，防止sql注入，一个参数的时候，任意参数名可以接收
    2.${},普通的Statement，字符串直接拼接，不可以防止sql注入，一个参数的时候，必须使用${value}接收参数
-->
<!--
    statement，内容：sql语句。
    id：唯一标识，随便写，在同一个命名空间下保持唯一，使用动态代理之后要求和方法名保持一致
    resultType：sql语句查询结果集的封装类型，使用动态代理之后和方法的返回类型一致；resultMap：二选一
    parameterType：参数的类型，使用动态代理之后和方法的参数类型一致
-->
    <select id="selectByNovelName" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from study.novel
        where novel_name = #{novelName,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete from study.novel
        where id = #{id,jdbcType=INTEGER}
    </delete>
<!--
    useGeneratedKeys:开启主键回写
    keyColumn：指定数据库的主键
    keyProperty：主键对应的pojo属性名
-->
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xin.daily.entity.novel.Novel"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into study.novel (novel_code, novel_name, description,
        url, cover_img, flag_delete,
        flag_update, flag_end, create_time,
        creator, creator_ip, modify_time,
        modifier, modifier_ip)
        values (#{novelCode,jdbcType=VARCHAR}, #{novelName,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
        #{url,jdbcType=VARCHAR}, #{coverImg,jdbcType=VARCHAR}, #{flagDelete,jdbcType=TINYINT},
        #{flagUpdate,jdbcType=TINYINT}, #{flagEnd,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP},
        #{creator,jdbcType=VARCHAR}, #{creatorIp,jdbcType=VARCHAR}, #{modifyTime,jdbcType=TIMESTAMP},
        #{modifier,jdbcType=VARCHAR}, #{modifierIp,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xin.daily.entity.novel.Novel"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into study.novel
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="novelCode != null">
                novel_code,
            </if>
            <if test="novelName != null">
                novel_name,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="coverImg != null">
                cover_img,
            </if>
            <if test="flagDelete != null">
                flag_delete,
            </if>
            <if test="flagUpdate != null">
                flag_update,
            </if>
            <if test="flagEnd != null">
                flag_end,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="creator != null">
                creator,
            </if>
            <if test="creatorIp != null">
                creator_ip,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
            <if test="modifier != null">
                modifier,
            </if>
            <if test="modifierIp != null">
                modifier_ip,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="novelCode != null">
                #{novelCode,jdbcType=VARCHAR},
            </if>
            <if test="novelName != null">
                #{novelName,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="coverImg != null">
                #{coverImg,jdbcType=VARCHAR},
            </if>
            <if test="flagDelete != null">
                #{flagDelete,jdbcType=TINYINT},
            </if>
            <if test="flagUpdate != null">
                #{flagUpdate,jdbcType=TINYINT},
            </if>
            <if test="flagEnd != null">
                #{flagEnd,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=VARCHAR},
            </if>
            <if test="creatorIp != null">
                #{creatorIp,jdbcType=VARCHAR},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifier != null">
                #{modifier,jdbcType=VARCHAR},
            </if>
            <if test="modifierIp != null">
                #{modifierIp,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xin.daily.entity.novel.Novel">
        <!--@mbg.generated-->
        update study.novel
        <set>
            <if test="novelCode != null">
                novel_code = #{novelCode,jdbcType=VARCHAR},
            </if>
            <if test="novelName != null">
                novel_name = #{novelName,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="coverImg != null">
                cover_img = #{coverImg,jdbcType=VARCHAR},
            </if>
            <if test="flagDelete != null">
                flag_delete = #{flagDelete,jdbcType=TINYINT},
            </if>
            <if test="flagUpdate != null">
                flag_update = #{flagUpdate,jdbcType=TINYINT},
            </if>
            <if test="flagEnd != null">
                flag_end = #{flagEnd,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=VARCHAR},
            </if>
            <if test="creatorIp != null">
                creator_ip = #{creatorIp,jdbcType=VARCHAR},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifier != null">
                modifier = #{modifier,jdbcType=VARCHAR},
            </if>
            <if test="modifierIp != null">
                modifier_ip = #{modifierIp,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xin.daily.entity.novel.Novel">
        <!--@mbg.generated-->
        update study.novel
        set novel_code = #{novelCode,jdbcType=VARCHAR},
        novel_name = #{novelName,jdbcType=VARCHAR},
        description = #{description,jdbcType=VARCHAR},
        url = #{url,jdbcType=VARCHAR},
        cover_img = #{coverImg,jdbcType=VARCHAR},
        flag_delete = #{flagDelete,jdbcType=TINYINT},
        flag_update = #{flagUpdate,jdbcType=TINYINT},
        flag_end = #{flagEnd,jdbcType=TINYINT},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        creator = #{creator,jdbcType=VARCHAR},
        creator_ip = #{creatorIp,jdbcType=VARCHAR},
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
        modifier = #{modifier,jdbcType=VARCHAR},
        modifier_ip = #{modifierIp,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByNovelCode" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from study.novel
        where
        novel_code = #{novelCode,jdbcType=VARCHAR}
    </select>
    <select id="selectListByOrderType" resultMap="queryResultMap">
        select
        <include refid="query_column_list"/>
        from study.novel
        where
        flag_delete = 0
        order by novel_code
        <if test="orderType != null ">${orderType}</if>
    </select>
</mapper>